services:
  # Celery Worker (solo GPU processing)
  celery-worker:
    image: matteopostiferi/hunyuan3d-2gp-app:latest
    container_name: celery-worker
    working_dir: /workspace/ThesisProject/3d-webgen/backend
    command: celery -A backend worker --loglevel=info --pool=solo -Q celery,default
    environment:
      # Django settings (necessario per Celery)
      - DJANGO_SETTINGS_MODULE=backend.settings
      
      # Redis Railway connection
      - CELERY_BROKER_URL=redis://default:CItpjCfWaaRXFjLClIEkXeKrfVdAPWKM@trolley.proxy.rlwy.net:31412
      - CELERY_RESULT_BACKEND=redis://default:CItpjCfWaaRXFjLClIEkXeKrfVdAPWKM@trolley.proxy.rlwy.net:31412
      
      # Celery settings
      - CELERY_ACCEPT_CONTENT=json
      - CELERY_TASK_SERIALIZER=json
      - CELERY_RESULT_SERIALIZER=json
      - CELERY_TIMEZONE=UTC
      - CELERY_ENABLE_UTC=True
      
      # Supabase Database (per Django ORM)
      - DB_NAME=postgres
      - DB_USER=postgres.muvnrrcpfsqimwzkjzpz
      - DB_PASSWORD=**Tfd4Pu?a*yAi!
      - DB_HOST=aws-0-eu-west-3.pooler.supabase.com
      - DB_PORT=6543
      
      # Supabase Storage (per file upload)
      - AWS_ACCESS_KEY_ID=608260a0a7cbc9e29a5b4211ed38c3a4
      - AWS_SECRET_ACCESS_KEY=c0ad804d9b224b13e39b68610e06b3bd99c3b787426d38f07f4a0ab615eba20b
      - AWS_S3_ENDPOINT_URL=https://muvnrrcpfsqimwzkjzpz.supabase.co/storage/v1/s3
      - AWS_STORAGE_BUCKET_NAME=project-files
      - AWS_S3_REGION_NAME=us-east-1
      
      # GPU config
      - CUDA_VISIBLE_DEVICES=0
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      
      # Ottimizzazioni PyTorch
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
      
      # Hunyuan3D paths
      - MODEL_CACHE_DIR=/app/models
      - OUTPUT_DIR=/app/outputs
      
    volumes:
      - ./models:/app/models
      - ./outputs:/app/outputs
      - hunyuan_cache:/root/.cache
      
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
              
    restart: unless-stopped
    networks:
      - celery-network
      
    healthcheck:
      test: ["CMD", "python3", "-c", "import redis; r=redis.from_url('redis://default:CItpjCfWaaRXFjLClIEkXeKrfVdAPWKM@trolley.proxy.rlwy.net:31412'); print('OK' if r.ping() else 'FAIL')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Flower (monitoring opzionale)
  flower:
    image: matteopostiferi/hunyuan3d-2gp-app:latest
    container_name: flower-monitor
    working_dir: /workspace/ThesisProject/3d-webgen/backend
    command: bash -c "pip install flower && celery -A backend flower --port=5555"
    ports:
      - "5555:5555"
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
      - CELERY_BROKER_URL=redis://default:CItpjCfWaaRXFjLClIEkXeKrfVdAPWKM@trolley.proxy.rlwy.net:31412
      - CELERY_RESULT_BACKEND=redis://default:CItpjCfWaaRXFjLClIEkXeKrfVdAPWKM@trolley.proxy.rlwy.net:31412
      - FLOWER_BASIC_AUTH=admin:password123
    depends_on:
      celery-worker:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - celery-network

# Volumi per cache e modelli
volumes:
  hunyuan_cache:
    driver: local

# Network
networks:
  celery-network:
    driver: bridge